# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ main ]
jobs:
  build:
    name: Build and Pushing the Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        if: github.ref == 'refs/heads/dev'
        uses: actions/checkout@v2

      - uses: benjlevesque/short-sha@v1.2
        if: github.ref == 'refs/heads/dev'
        id: short-sha
        with:
          length: 6
      - run: echo $SHA
        env: 
          SHA: ${{ steps.short-sha.outputs.sha }}
      - run: echo $SHA
        env: 
          SHA: ${{ env.SHA }}

      - name: Install kubectl
        if: github.ref == 'refs/heads/dev'
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.3'
        id: install

      - name: Configure AWS Credentials
        if: github.ref == 'refs/heads/dev'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-3

      - name: ecr login
        if: github.ref == 'refs/heads/dev'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push the Image to Amazon ECR
        if: github.ref == 'refs/heads/dev'
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: env-dev-skorelife-credit-service
          IMAGE_TAG: ${{ env.SHA }}
          DEV_URI_ID: ${{ secrets.DEV_URI_ID }}
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          aws ecr get-login-password --region ap-southeast-3 | docker login --username AWS --password-stdin $DEV_URI_ID.dkr.ecr.ap-southeast-3.amazonaws.com
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest --build-arg TOKEN=$TOKEN .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
