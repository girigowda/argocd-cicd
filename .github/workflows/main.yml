# This is a basic workflow to help you get started with Actions.

name: CI

on:
  push:
    branches: [ main ]
jobs:
  build:
    name: Build and Pushing the Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        if: github.ref == 'refs/heads/main'
        uses: actions/checkout@v2

      - uses: benjlevesque/short-sha@v1.2
        if: github.ref == 'refs/heads/main'
        id: short-sha
        with:
          length: 6
      - run: echo $SHA
        env: 
          SHA: ${{ steps.short-sha.outputs.sha }}
      - run: echo $SHA
        env: 
          SHA: ${{ env.SHA }}

      - name: Configure AWS Credentials
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: ecr login
        if: github.ref == 'refs/heads/main'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build, Tag, and Push the Image to Amazon ECR
        if: github.ref == 'refs/heads/main'
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mtn
          IMAGE_TAG: ${{ env.SHA }}
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          ls -ltr
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 813383539013.dkr.ecr.us-east-1.amazonaws.com
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest --build-arg TOKEN=$TOKEN .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
        
      - name: Checkout tools repo
        uses: actions/checkout@main
        with:
          repository: girigowda/helm-agrocd
          token: ${{ secrets.TOKEN }}
          
      - name: Update Version
        env:
          IMAGE_TAG: ${{ env.SHA }}
        run: |
            ls -ltr
            pwd
            echo $IMAGE_TAG
            yq e '.image.version = "'$IMAGE_TAG'"' -i /home/runner/work/argocd-cicd/argocd-cicd/values.yaml
            #####yq e '.image.version = "'$IMAGE_TAG'"' -i /home/runner/work/argocd-cicd/argocd-cicd/charts/helm-example/values.yaml
            ##ver=$(sed -n '/version: /p' /home/runner/work/argocd-cicd/argocd-cicd/charts/helm-example/values.yaml)
            ##echo $ver
            ##cunt=$(echo "$ver" | cut -c -11)
            ##echo $cunt
            ##nam=$(echo $cunt$IMAGE_TAG)
            ##echo --- $nam -------
            ##sed -i "s|$ver|  $nam|g" /home/runner/work/argocd-cicd/argocd-cicd/charts/helm-example/values.yaml
            #####cat /home/runner/work/argocd-cicd/argocd-cicd/charts/helm-example/values.yaml
            cat /home/runner/work/argocd-cicd/argocd-cicd/values.yaml
      
      - name: Pushes test file
        uses: actions/github-action-push-to-another-repository@v2
        env:
          API_TOKEN_GITHUB: ${{ secrets.TOKEN }}
        with:
          source_file: 'values.yaml'
          destination_repo: 'girigowda/helm-agrocd'
          user_name: 'girigowda'
          user-email: giri.gowda.5@gmail.com
          commit_message: 'A custom message for the commit'
            
      - name: Commit and push changes
        uses: devops-infra/action-commit-push@master
        with:
          github_token: ${{ secrets.TOKEN }}
          commit_message: Version updated
